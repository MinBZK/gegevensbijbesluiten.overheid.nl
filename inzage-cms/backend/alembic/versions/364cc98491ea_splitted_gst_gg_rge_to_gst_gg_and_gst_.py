"""splitted gst_gg_rge to gst_gg and gst_rge

Revision ID: 364cc98491ea
Revises: 8fdcf5c0da84
Create Date: 2024-03-11 11:11:59.016076

"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "364cc98491ea"
down_revision = "8fdcf5c0da84"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "gst_rge",
        sa.Column("gst_rge_cd", sa.Integer(), nullable=False, comment="Gegevensstroom regelingelement code"),
        sa.Column("gst_cd", sa.Integer(), nullable=False, comment="Gegevensstroom code"),
        sa.Column("rge_cd", sa.Integer(), nullable=False, comment="Regelingelement code"),
        sa.Column(
            "sort_key",
            sa.Integer(),
            nullable=True,
            comment="Sorteersleutel van het regelingelement in het gegevensstroom blokje",
        ),
        sa.Column("notitie", sa.VARCHAR(length=4000), nullable=True, comment="Notitieveld"),
        sa.Column("user_nm", sa.VARCHAR(length=30), server_default="ICTU", nullable=True, comment="Gebruikersnaam"),
        sa.Column(
            "ts_mut",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
            comment="Tijdstip laatste mutatie",
        ),
        sa.Column(
            "ts_start",
            sa.DateTime(timezone=True),
            server_default=sa.text("'2023-01-01 00:00:00+00'::timestamp with time zone"),
            nullable=False,
            comment="Tijdstip start datum",
        ),
        sa.Column(
            "ts_end",
            sa.DateTime(timezone=True),
            server_default=sa.text("'9999-12-31 23:59:59.999999+00'::timestamp with time zone"),
            nullable=False,
            comment="Tijdstip einde datum",
        ),
        sa.ForeignKeyConstraint(["gst_cd"], ["gst.gst_cd"], name=op.f("fk_gst_rge_gst_cd_gst")),
        sa.ForeignKeyConstraint(["rge_cd"], ["rge.rge_cd"], name=op.f("fk_gst_rge_rge_cd_rge")),
        sa.PrimaryKeyConstraint("gst_rge_cd", name=op.f("pk_gst_rge")),
        comment="Koppeling tussen gegevensstroom en regelingelement",
    )
    op.create_index(op.f("ix_gst_rge_gst_cd"), "gst_rge", ["gst_cd"], unique=False)
    op.create_index(op.f("ix_gst_rge_rge_cd"), "gst_rge", ["rge_cd"], unique=False)
    op.execute(
        """
        INSERT INTO gst_rge (gst_cd, rge_cd)
        SELECT distinct gst_cd, rge_cd
        FROM gst_gg_rge
        """
    )

    op.drop_index("ix_gst_gg_rge_rge_cd", table_name="gst_gg_rge")
    op.rename_table("gst_gg_rge", "gst_gg")
    op.alter_column("gst_gg", "gst_gg_rge_cd", new_column_name="gst_gg_cd")
    op.drop_column("gst_gg", "rge_cd")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.rename_table("gst_gg", "gst_gg_rge")
    op.add_column("gst_gg_rge", sa.Column("rge_cd", sa.INTEGER(), nullable=True))
    op.alter_column("gst_gg_rge", "gst_gg_cd", new_column_name="gst_gg_rge_cd")
    op.create_foreign_key("fk_gst_gg_rge_rge_cd_rge", "gst_gg_rge", "rge", ["rge_cd"], ["rge_cd"])
    op.create_index("ix_gst_gg_rge_rge_cd", "gst_gg_rge", ["rge_cd"], unique=False)

    op.drop_index(op.f("ix_gst_rge_rge_cd"), table_name="gst_rge")
    op.drop_index(op.f("ix_gst_rge_gst_cd"), table_name="gst_rge")
    op.drop_table("gst_rge")
    # ### end Alembic commands ###
